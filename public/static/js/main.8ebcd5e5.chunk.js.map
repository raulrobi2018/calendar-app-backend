{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/formatEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendarMessagesEsp.js","components/calendar/configurations.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithOutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","formatEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActive","eventUpdate","eventDelete","eventLoaded","login","user","checkingFinish","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setvalues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","months","split","monthsShort","monthsShortDot","weekdays","weekdaysShort","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","dateNow","minutes","seconds","add","dateFuture","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","setDateEnd","validTitle","setValidTitle","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","required","rows","AddNewFab","DeleteFab","locale","updateLocale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","eventSetActive","onSelectSlot","selectable","onView","view","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ebcd5e5.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithOutToken = (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if (method === \"GET\") {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchWithToken = (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    //Si llegase a ser null le seteo vacío\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"x-token\": token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n};\r\n\r\nexport {fetchWithOutToken, fetchWithToken};\r\n","export const types = {\r\n    uiOpenModal: \"[ui] Open modal\",\r\n    uiCloseModal: \"[ui] Close modal\",\r\n\r\n    eventStartAddNew: \"[event] Start add new\",\r\n    eventAddNew: \"[event] Add new\",\r\n    eventSetActive: \"[event] Set active\",\r\n    eventClearActive: \"[event] Clear active\",\r\n    eventUpdate: \"[event] Update\",\r\n    eventDelete: \"[event] Delete\",\r\n    eventsLoaded: \"[event] Events loaded\",\r\n    clearEventsOnLogout: \"[event] Clear events\",\r\n\r\n    authCheckingFinish: \"[auth] Finish checking login state\",\r\n    authStartLogin: \"[auth] Start login\",\r\n    authLogin: \"[auth] Login\",\r\n    authStartRegister: \"[auth] Start register\",\r\n    authStartTokenRenew: \"[auth] Start token renew\",\r\n    authLogout: \"[auth] Logout\"\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const formatEvents = (events = []) => {\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate()\r\n    }));\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport {fetchWithToken} from \"../helpers/fetch\";\r\nimport {formatEvents} from \"../helpers/formatEvents\";\r\nimport {types} from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    // obtengo el state usando el getState\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const {uid, name} = getState().auth;\r\n            const resp = await fetchWithToken(\"events\", event, \"POST\");\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"\", \"Ha ocurrido un error\", \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(\r\n                `events/${event.id}`,\r\n                event,\r\n                \"PUT\"\r\n            );\r\n\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdate(event));\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const {activeEvent} = getState().calendar;\r\n\r\n        try {\r\n            const resp = await fetchWithToken(\r\n                `events/${activeEvent.id}`,\r\n                {},\r\n                \"DELETE\"\r\n            );\r\n\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDelete());\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst eventDelete = () => ({\r\n    type: types.eventDelete\r\n});\r\n\r\nexport const eventsLoad = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(\"events\");\r\n            const body = await resp.json();\r\n\r\n            //Se transforman las fechas a un formato de Date porque mongo\r\n            //devuelve un string y el Calendar falla si las quiere mostrar\r\n            const events = formatEvents(body.events);\r\n\r\n            if (body.ok) {\r\n                dispatch(eventLoaded(events));\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"\", \"Ha ocurrido un error\", \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventsLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const clearEventsOnLogout = () => ({\r\n    type: types.clearEventsOnLogout\r\n});\r\n","import {fetchWithOutToken, fetchWithToken} from \"../helpers/fetch\";\r\nimport {types} from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport {clearEventsOnLogout} from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithOutToken(\"auth\", {email, password}, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            //Se configuró en 2 horas\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithOutToken(\r\n            \"auth/new\",\r\n            {name, email, password},\r\n            \"POST\"\r\n        );\r\n\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            //Se configuró en 2 horas\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken(\"auth/renew\");\r\n\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            //Se configuró en 2 horas\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        //\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(clearEventsOnLogout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({type: types.authLogout});\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setvalues(initialState);\r\n    };\r\n\r\n    // Desestructuro target del event\r\n    const handleInputChange = ({target}) => {\r\n        setvalues({\r\n            ...values,\r\n            // Le pone el nombre del input recibido (atributo name) y le asigna el valor cargado\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    // Retorna el estado y las funciones para manejarlas en otros componentes\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startLogin, startRegister} from \"../../actions/auth\";\r\n\r\nimport \"./login.css\";\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: \"raulrodriguez@gmail.com\",\r\n        lPassword: \"123456\"\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: \"Raul Rodriguez\",\r\n        rEmail: \"raulrodriguez@gmail.com\",\r\n        rPassword1: \"123456\",\r\n        rPassword2: \"123456\"\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire(\r\n                \"Error\",\r\n                \"Las contraseñas deben ser iguales\",\r\n                \"error\"\r\n            );\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startLogout} from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector((state) => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        //Al ejecutar el startLogout me saca porque cambia el uid y como\r\n        //el AppRouter está pendiente de los cambios del uid, entonces se vuelve a\r\n        //redibujar las rutas entonces el uid es null y lo saca al login\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","export const messages = {\r\n    allDay: \"Todo el día\",\r\n    previous: \"<\",\r\n    next: \">\",\r\n    today: \"Hoy\",\r\n    month: \"Mes\",\r\n    week: \"Semana\",\r\n    day: \"Día\",\r\n    agenda: \"Agenda\",\r\n    date: \"Fecha\",\r\n    time: \"Hora\",\r\n    event: \"Evento\",\r\n    noEventsInRange: \"No hay eventos en este rango\",\r\n    showMore: (total) => `+ Ver más (${total})`\r\n};\r\n","export const months = \"Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre\".split(\r\n    \"_\"\r\n);\r\nexport const monthsShort = \"Ene_Feb_Mar_Abr_May_Jun_Jul_Ago_Sep_Oct_Nov_Dic\".split(\r\n    \"_\"\r\n);\r\n\r\nexport const monthsShortDot = \"Ene._Feb._Mar._Abr._May._Jun._Jul._Ago._Sep._Oct._Nov._Dic.\".split(\r\n    \"_\"\r\n);\r\n\r\nexport const weekdays = \"Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado\".split(\r\n    \"_\"\r\n);\r\n\r\nexport const weekdaysShort = \"Dom._Lun._Mar._Mié._Jue._Vie._Sáb.\".split(\"_\");\r\n","import React from \"react\";\r\n\r\n//event es el evento en el calendario\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <br />\r\n            <span>{user.name}</span>\r\n        </div>\r\n    );\r\n};\r\n","import {types} from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiCloseModal} from \"../../actions/ui\";\r\nimport {\r\n    eventClearActive,\r\n    eventStartAddNew,\r\n    eventStartUpdate\r\n} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    }\r\n};\r\n\r\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(\"#root\");\r\n\r\n//Lo inicializa en la hora actual más 1 hora\r\nconst dateNow = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst dateFuture = dateNow.clone().add(1, \"hours\");\r\n\r\n//Declarando las constantes fuera de la función principal,\r\n//hará que solamente se instancie 1 vez y no cada vez que se reconstruye la clase\r\nconst initEvent = {\r\n    title: \"\",\r\n    notes: \"\",\r\n    start: dateNow.toDate(),\r\n    end: dateFuture.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    //Hook de Redux que retorna el state actual\r\n    //En este caso tomo el atributo ui del state y luego desestructuro el modalOpen\r\n    const {modalOpen} = useSelector((state) => {\r\n        return state.ui;\r\n    });\r\n    const {activeEvent} = useSelector((state) => {\r\n        return state.calendar;\r\n    });\r\n\r\n    //Mantiene el estado de la fecha seleccionada en el campo del datepicker\r\n    const [dateStart, setDateStart] = useState(dateNow.toDate());\r\n    const [dateEnd, setDateEnd] = useState(dateFuture.toDate());\r\n    const [validTitle, setValidTitle] = useState(true);\r\n\r\n    //Mantiene el estado del formulario para agregar un nuevo evento\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    //Queda escuchando cuando cambia el activeEvent\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            //primero establezco todos los valores del formulario\r\n            ...formValues,\r\n            //para el campo que estoy cambiando, toma su nombre y asigna el value\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActive());\r\n        setFormValues(initEvent);\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Creo instancias de moment\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire(\"Error\", \"La fecha de fin debe ser mayor a la de inicio\");\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length < 10) {\r\n            return setValidTitle(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            //A la acción le paso el evento y le agrego un id y el usuario\r\n            dispatch(eventStartAddNew(formValues));\r\n            //TODO: grabar en base de datos\r\n        }\r\n\r\n        setValidTitle(true);\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1> {activeEvent ? \"Modificar evento\" : \"Nuevo evento\"} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={start}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={end}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${\r\n                            !validTitle && \"is-invalid\"\r\n                        }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                        required=\"required\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Una descripción corta\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Información adicional\r\n                    </small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab btn-add\" onClick={handleClick}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {eventStartDelete} from \"../../actions/events\";\r\n\r\nexport const DeleteFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n    return (\r\n        <button className=\"btn btn-danger fab btn-del\" onClick={handleClick}>\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Navbar} from \"../ui/Navbar\";\r\n\r\nimport {Calendar, momentLocalizer} from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\n\r\nimport {messages} from \"../../helpers/calendarMessagesEsp\";\r\n\r\n//React big calendar styles\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n//Moment locale Spanish configuration\r\nimport \"moment/locale/es\";\r\nimport {\r\n    months,\r\n    monthsShort,\r\n    monthsShortDot,\r\n    weekdays,\r\n    weekdaysShort\r\n} from \"./configurations\";\r\nimport {CalendarEvent} from \"./CalendarEvent\";\r\nimport {CalendarModal} from \"./CalendarModal\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/ui\";\r\nimport {\r\n    eventClearActive,\r\n    eventsLoad,\r\n    eventSetActive\r\n} from \"../../actions/events\";\r\nimport {AddNewFab} from \"../ui/AddNewFab\";\r\n\r\nimport \"../ui/fab.css\";\r\nimport {DeleteFab} from \"../ui/DeleteFab\";\r\n\r\nmoment.locale(\"es\");\r\n\r\n//Modifica los nombres de meses y días poniendole la primer letra en mayúsculas\r\nmoment.updateLocale(\"es\", {\r\n    months: months,\r\n    weekdays: weekdays,\r\n    monthsShort: monthsShort,\r\n    monthsShortDot: monthsShortDot,\r\n    weekdaysShort: weekdaysShort\r\n});\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    //Hook de Redux que retorna el state actual\r\n    //Tomo los eventos actuales en el state y se reflejan automaticamente en el calendar\r\n    //ya que el atributo \"events\" toma esta colección\r\n    const {events} = useSelector((state) => {\r\n        return state.calendar;\r\n    });\r\n\r\n    const {uid} = useSelector((state) => {\r\n        return state.auth;\r\n    });\r\n\r\n    const {activeEvent} = useSelector((state) => {\r\n        return state.calendar;\r\n    });\r\n\r\n    //Mantenemos el estado de la última vista utilizando useState\r\n    //Si la variable no existe en el localStorage, setea por defecto en month\r\n    const [lastView, setLastView] = useState(\r\n        localStorage.getItem(\"lastView\") || \"month\"\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventsLoad());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (event) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    const onSelectEvent = (event) => {\r\n        dispatch(eventSetActive(event));\r\n    };\r\n\r\n    const onViewChange = (event) => {\r\n        setLastView(event);\r\n        localStorage.setItem(\"lastView\", event);\r\n    };\r\n\r\n    const onSelectSlot = (event) => {\r\n        dispatch(eventClearActive());\r\n    };\r\n\r\n    //Crea un estilo para aplicar\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        //console.log(event, start, end, isSelected);\r\n        const style = {\r\n            backgroundColor: uid === event.user._id ? \"#367cf7\" : \"#465660\",\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n            color: \"white\"\r\n        };\r\n\r\n        return {style};\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{height: 500}}\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{event: CalendarEvent}}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n            />\r\n            {activeEvent && <DeleteFab />}\r\n            <AddNewFab />\r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PrivateRoute = ({\r\n    // Renombra component a Component porque los componentes se escriben con la primer letra en mayúsculas\r\n    // El parámetro ...rest es para almacenar el resto de los atributos, como el exact, el path, etc\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    //El props en este caso recibiría el history, el location, etc\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                // Si está autenticado, retorna el componente al cual el usuario quiere entrar y le adiciona\r\n                //las props, o sea, todo lo que tiene el componente. De lo contrario lo redirige al login\r\n                isAuthenticated ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRoute = ({\r\n  // Renombra component a Component porque los componentes se escriben con la primer letra en mayúsculas\r\n  // El parámetro ...rest es para almacenar el resto de los atributos, como el exact, el path, etc\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  //El props en este caso recibiría el history, el location, etc\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        // Si NO está autenticado, retorna el componente al cual el usuario quiere entrar y le adiciona\r\n        //las props, o sea, todo lo que tiene el componente. De lo contrario lo redirige al login\r\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n};\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {BrowserRouter as Router, Redirect, Switch} from \"react-router-dom\";\r\n\r\nimport {startChecking} from \"../actions/auth\";\r\nimport {LoginScreen} from \"../components/auth/LoginScreen\";\r\nimport {CalendarScreen} from \"../components/calendar/CalendarScreen\";\r\nimport {PrivateRoute} from \"./PrivateRoute\";\r\nimport {PublicRoute} from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector((state) => state.auth);\r\n\r\n    //Solo tendrá como dependencia al dispatch porque el startChecking\r\n    //no está dentro de este componente y por lo tanto no cambiará\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    //No quiero mostrar nada hasta que el checking sea false\r\n    if (checking) {\r\n        return <h1>Cargando</h1>;\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                {/* A <Switch> looks through its children <Route>s and\r\n         renders the first one that matches the current URL. */}\r\n                <Switch>\r\n                    {/* exact para que machee la ruta exacta */}\r\n                    {/* con el uid se utiliza doble negación. Si utilizara !uid y uid no es null, \r\n                    retornaría false que quiere decir que el string no es vacío. Al ponerle otra negación\r\n                    retorna true */}\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    {/* Si no encuentra ningún path, lo redirige a calendar */}\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n","//Se inicializa en true para verificar si el usuario está\r\n\r\nimport {types} from \"../types/types\";\r\n\r\n//autenticado\r\nconst initialState = {\r\n    checking: true\r\n    // uid: null,\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                // Retornamos el state como está y seteo el checking\r\n                //en false porque ya se que lo autentiqué\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            };\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                //Expando los eventos y le agrego el nuevo\r\n                events: [...state.events, action.payload]\r\n            };\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((e) =>\r\n                    e.id === action.payload.id ? action.payload : e\r\n                )\r\n            };\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                // También puedo tomar el id directamente del \"activeEvent\" y no\r\n                //pasar el payload\r\n                events: state.events.filter(\r\n                    (e) => e.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null\r\n            };\r\n        case types.eventsLoaded:\r\n            return {\r\n                ...state,\r\n                // Exparso todos los eventos que vienen en el payload\r\n                events: [...action.payload]\r\n            };\r\n        case types.clearEventsOnLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n            break;\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n};\r\n","import {combineReducers} from \"redux\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {calendarReducer} from \"./calendarReducer\";\r\n\r\nimport {uiReducer} from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import {createStore, combineReducers, compose, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {rootReducer} from \"../reducers/rootReducer\";\r\n\r\n// Este parámetro es para la configuración del Redux DevTools en las tools del navegador pero par uso con Redux\r\nconst composeEnhancers =\r\n    (typeof window !== \"undefined\" &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n\r\n// Se crea el store donde Redux guardará toda la información\r\nexport const store = createStore(\r\n    rootReducer,\r\n    // Este parámetro es para la configuración del Redux DevTools en las tools del navegador\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport {AppRouter} from \"./routers/AppRouter\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        // La aplicación del provider que proveerá el store a nuestra aplicación\r\n        //se debe colocar en el componente más alto que tengamos\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {CalendarApp} from \"./CalendarApp\";\n\nimport \"./styles.css\";\nimport \"./components/calendar/modal.css\";\nimport \"./components/calendar/datepicker.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}